---
import NavButton from "@components/NavButton.astro";
import YouTubePlayerWithCarousel from "@components/YouTubePlayerWithCarousel";
import Layout from "@layouts/Layout.astro";
import { getBackropImage, getDetails } from "@lib/details";
import { getLocaleDate } from "@lib/utils";
import { Icon } from "astro-icon/components";
import Image from "astro/components/Image.astro";
const { resource, id } = Astro.params;
const details = await getDetails(resource, id);
const backgroundImage = getBackropImage(details.backdrop_path);
const videos = details.videos.results
    .filter((video) => video.site === "YouTube")
    .slice(0, 5);
const formater = new Intl.ListFormat("es-ES", {
    style: "long",
    type: "conjunction",
});
const cast = formater.format(
    details.credits.cast.slice(0, 10).map((actor) => actor.name),
);
const genres = formater.format(details.genres.map((genre) => genre.name));
---

<Layout title={details.title ?? details.name}>
    <div class="mt-4 ml-10 lg:ml-0">
        <NavButton
            text="Volver"
            href="/"
            icon="arrow-left"
            iconPosition="left"
        />
    </div>
    <Image
        src={backgroundImage}
        alt={details.title ?? details.name}
        width={1280}
        height={720}
        class="absolute -z-10 top-0 left-0 w-full h-full object-cover opacity-80 aspect-video"
        transition:name=`detail-${resource}-${id}`
    />
    <section class="flex gap-x-10">
        <!-- Movie Info -->
        <div
            class="flex flex-col justify-end items-start max-w-2xl h-[calc(100vh-10rem)]"
        >
            <div class="space-y-6 bg-black/50 p-10 rounded-lg w-full">
                <h2
                    class="text-gray-200 text-6xl font-bold capitalize underline decoration-solid underline-offset-8"
                >
                    {details.title ?? details.name}
                </h2>
                <p class="flex text-xl text-gray-200 min-h-4">
                    {
                        details.overview
                            ? details.overview.slice(0, 125) + "..."
                            : "No hay descripción"
                    }
                </p>
                {
                    details.first_air_date && (
                        <p class="flex text-xl text-gray-200 min-h-4">
                            {`Primera emisión: ${getLocaleDate(details.first_air_date)}`}
                        </p>
                    )
                }
                {
                    details.number_of_seasons && (
                        <p class="flex text-xl text-gray-200 min-h-4">
                            {`Número de temporadas: ${details.number_of_seasons}`}
                        </p>
                    )
                }
                {
                    details.number_of_episodes && (
                        <p class="flex text-xl text-gray-200 min-h-4">
                            {`Número de episodios: ${details.number_of_episodes}`}
                        </p>
                    )
                }
                <div class="flex space-x-4 w-full">
                    <button
                        id="playButton"
                        class="bg-white text-black hover:bg-gray-200 px-4 py-2 rounded flex items-center"
                    >
                        <Icon name="play" class="w-4 h-4 mr-2" /> Reproducir
                    </button>
                    <button
                        id="infoButton"
                        class="bg-gray-800 text-white hover:bg-gray-700 px-4 py-2 rounded flex items-center"
                    >
                        <Icon name="info" class="w-4 h-4 mr-2" /> Más Información
                    </button>
                    <button
                        class="text-white hover:text-gray-300 px-4 py-2 rounded flex items-center"
                    >
                        <Icon name="plus" class="w-4 h-4 mr-2" /> Mi Lista
                    </button>
                    <button
                        class="text-white hover:text-gray-300 px-4 py-2 rounded flex items-center"
                    >
                        <Icon name="thumb-up" class="w-4 h-4 mr-2" /> Me Gusta
                    </button>
                </div>
            </div>
        </div>
        <!-- Videos Carousel -->
        {
            videos.length > 0 && (
                <div class="flex flex-col justify-end items-center w-full max-w-[50rem]">
                    <div class="bg-black/50 p-10 rounded-lg flex flex-col justify-between w-full">
                        <YouTubePlayerWithCarousel
                            client:load
                            videos={videos}
                            initialVideoId={videos[0]?.key}
                        />
                    </div>
                </div>
            )
        }
    </section>
</Layout>

<!-- Info Dialog (hidden by default) -->
<div
    id="infoDialog"
    class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
>
    <div class="bg-gray-800 text-white p-8 rounded-lg max-w-lg">
        <h3 class="text-2xl font-bold mb-4">
            Detalles de {details.title ?? details.name}
        </h3>
        <p>
            <span class="font-bold">Año:</span>
            {getLocaleDate(details.release_date ?? details.first_air_date)}
        </p>
        <p>
            <span class="font-bold">Director:</span>
            {
                details.credits.crew?.find(
                    (member) => member.job === "Director",
                )?.name
            }
        </p>
        <p>
            <span class="font-bold">Reparto:</span>
            {cast}
        </p>
        <p>
            <span class="font-bold">Género:</span>
            {genres}
        </p>
        <p class="mt-4">{details.overview}</p>
        <button
            id="closeInfoButton"
            class="mt-6 bg-white text-black hover:bg-gray-200 px-4 py-2 rounded w-full"
        >
            Cerrar
        </button>
    </div>
</div>

<script>
    const playButton = document.getElementById("playButton");
    const videoPlayer = document.getElementById("videoPlayer");
    const closeVideoButton = document.getElementById("closeVideoButton");
    const infoButton = document.getElementById("infoButton");
    const infoDialog = document.getElementById("infoDialog");
    const closeInfoButton = document.getElementById("closeInfoButton");

    playButton.addEventListener("click", () => {
        videoPlayer.classList.remove("hidden");
        closeVideoButton.classList.remove("hidden");
    });

    closeVideoButton.addEventListener("click", () => {
        videoPlayer.classList.add("hidden");
        closeVideoButton.classList.add("hidden");
    });

    infoButton.addEventListener("click", () => {
        infoDialog.classList.remove("hidden");
    });

    closeInfoButton.addEventListener("click", () => {
        infoDialog.classList.add("hidden");
    });
</script>
